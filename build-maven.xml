<project name="Gwt4Touch2" default="deploy" basedir="."
	xmlns:artifact="antlib:org.apache.maven.artifact.ant">

	<property name="src" location="src" />
	<property name="lib" value="lib" />
	<property name="build" location="build" />
	<property name="dist" location="dist" />
	<property name="license.file" value="LICENSE" />

	<!-- define Maven coordinates -->
	<property name="groupId" value="com.emitrom" />
	<property name="artifactId" value="touch4j" />
	<property name="version" value="4.2-SNAPSHOT" />

	<!-- define artifacts' name, which follows the convention of Maven -->
	<property name="maven-jar" value="${dist}/lib/${artifactId}-${version}.jar"/>
	<property name="maven-javadoc-jar"
		value="${dist}/lib/${artifactId}-${version}-javadoc.jar" />
	<property name="maven-sources-jar"
		value="${dist}/lib/${artifactId}-${version}-sources.jar" />

	<!-- defined maven snapshots and staging repository id and url -->
	<property name="maven-snapshots-repository-id" value="sonatype-nexus-snapshots" />
	<property name="maven-snapshots-repository-url"
		value="https://oss.sonatype.org/content/repositories/snapshots/" />
	<property name="maven-staging-repository-id" value="sonatype-nexus-staging" />
	<property name="maven-staging-repository-url"
		value="https://oss.sonatype.org/service/local/staging/deploy/maven2/" />

	<!-- Classpath -->
	<path id="touch4j.classpath">
		<pathelement location="${src}" />
		<pathelement location="${build}" />
		<fileset dir="${lib}" includes="**/*.jar" />
	</path>

	<target name="init">
		<mkdir dir="${build}" />
		<mkdir dir="${dist}/lib" />
	</target>

	<!-- Compile the source -->
	<target name="compile" depends="init" description="compile the source">

		<javac srcdir="${src}" includes="**/*.java" encoding="utf-8"
			destdir="${build}" source="1.6" target="1.6" nowarn="true" debug="true"
			debuglevel="lines,vars,source">
			<classpath refid="touch4j.classpath" />
		</javac>

		<!-- We need to copy the source files, if not GWT will complain -->
		<copy todir="${build}">
			<fileset dir="${src}" includes="**/*.xml" />
			<fileset dir="${src}" includes="**/*.java" />
			<fileset dir="${src}" includes="**/*.properties" />
		</copy>
		<!-- Copy the license file -->
		<copy todir="${build}" file="${license.file}" />


	</target>

	<target name="dist" depends="compile" description="generate the distribution">

		<!-- build the main artifact -->
		<jar jarfile="${maven-jar}" basedir="${build}" />

		<!-- build the javadoc artifact -->
		<javadoc sourcepath="${src}" destdir="${dist}/javadoc" />
		<jar jarfile="${maven-javadoc-jar}">
			<fileset dir="${dist}/javadoc" />
		</jar>

		<!-- build the sources artifact -->
		<jar jarfile="${maven-sources-jar}">
			<fileset dir="${src}" />
		</jar>
		
	</target>

	<target name="deploy" depends="dist"
		description="deploy snapshot version to Maven snapshot repository">
		<artifact:mvn>
			<arg value="org.apache.maven.plugins:maven-deploy-plugin:2.6:deploy-file" />
			<arg value="-Durl=${maven-snapshots-repository-url}" />
			<arg value="-DrepositoryId=${maven-snapshots-repository-id}" />
			<arg value="-DpomFile=pom.xml" />
			<arg value="-Dfile=${maven-jar}" />
		</artifact:mvn>
	</target>

	<!-- before this, update project version (both build.xml and pom.xml) from 
		SNAPSHOT to RELEASE -->
	<target name="stage" depends="dist"
		description="deploy release version to Maven staging repository">
		<!-- sign and deploy the main artifact -->
		<artifact:mvn>
			<arg
				value="org.apache.maven.plugins:maven-gpg-plugin:1.3:sign-and-deploy-file" />
			<arg value="-Durl=${maven-staging-repository-url}" />
			<arg value="-DrepositoryId=${maven-staging-repository-id}" />
			<arg value="-DpomFile=pom.xml" />
			<arg value="-Dfile=${maven-jar}" />
			<arg value="-Pgpg" />
		</artifact:mvn>

		<!-- sign and deploy the sources artifact -->
		<artifact:mvn>
			<arg
				value="org.apache.maven.plugins:maven-gpg-plugin:1.3:sign-and-deploy-file" />
			<arg value="-Durl=${maven-staging-repository-url}" />
			<arg value="-DrepositoryId=${maven-staging-repository-id}" />
			<arg value="-DpomFile=pom.xml" />
			<arg value="-Dfile=${maven-sources-jar}" />
			<arg value="-Dclassifier=sources" />
			<arg value="-Pgpg" />
		</artifact:mvn>

		<!-- sign and deploy the javadoc artifact -->
		<artifact:mvn>
			<arg
				value="org.apache.maven.plugins:maven-gpg-plugin:1.3:sign-and-deploy-file" />
			<arg value="-Durl=${maven-staging-repository-url}" />
			<arg value="-DrepositoryId=${maven-staging-repository-id}" />
			<arg value="-DpomFile=pom.xml" />
			<arg value="-Dfile=${maven-javadoc-jar}" />
			<arg value="-Dclassifier=javadoc" />
			<arg value="-Pgpg" />
		</artifact:mvn>
	</target>

	<target name="clean" description="clean up">
		<delete dir="${build}" />
		<delete dir="${dist}" />
	</target>

</project>